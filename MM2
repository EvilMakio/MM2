local Atlas = loadstring(game:HttpGet("https://siegehub.net/Atlas.lua"))()

-- by EvilMakio
-- https://rscripts.net/u/evilmakio

local UI = Atlas.new({
    Name = "EVIL"; -- script name (required)
    ConfigFolder = "EVIL"; -- folder name to save configs to, set this to nil if you want to disable configs saving
    Credit = "Made By EvilMakio"; -- text to appear if player presses the "i" button on their UI (optional)
    Color = Color3.fromRGB(255,0,0); -- theme color for UI (required)
    Bind = "LeftControl"; -- keybind for toggling the UI, must be a valid KeyCode name
    -- Atlas Loader:
    UseLoader = true; -- whether to use Atlas Loader or not, if set to false than CheckKey and Discord are ignored
    FullName = "EVIL HUB"; -- works if UseLoader is set to true, can be same as Name argument, shown on loader frame
    CheckKey = function(inputtedKey) -- works if UseLoader is set to true, where inputtedKey is the key inputted by the player
        return inputtedKey=="evil299key"
    end;
    Discord = "https://link-hub.net/937544/roblox-scipts-mm-2"; -- works if UseLoader is set to true, will be copied to clipboard if player presses "Copy Invite" button
})

-- by EvilMakio
-- https://rscripts.net/u/evilmakio

local MyPage = UI:CreatePage("Main/Player")
local MySection = MyPage:CreateSection("Main/Player")

-- Speed 

MySection:CreateSliderToggle({ -- IMPORTANT: This function does not return anything, please modify flags directly in order to read or update toggle values. SCROLL TO BOTTOM OF PAGE TO SEE HOW TO MODIFY FLAGS
    Name = "Speed"; -- required: name of element
    SliderFlag = "Slider"; -- required: unique flag name to use for slider element
    ToggleFlag = "Speed"; -- required: unique flag name to use for toggle element
    Min = 0; -- required: slider minimum drag
    Max = 50; -- required: slider maximum drag (Max>Min or else script will error)
    AllowOutOfRange = true; -- optional: determines whether the player can enter values outside of range Min:Max when typing in the TextBox. If left nil, this is false
    Digits = 2; -- optional: digits for rounding when dragging or entering values, default is 0 (whole numbers)
    SliderDefault = 5; -- optional: default value for slider, will be used if config saving is disabled and there is no saved data, will be the Min value if left nil
    ToggleDefault = false; -- optional: default value for toggle, will be used if config saving is disabled and there is no saved data, will be false if left nil
    SliderCallback = function(newValue) -- optional: function that will be called whenever slider flag is changed
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = newValue
    end;
    ToggleCallback = function(newValue) -- optional: function that will be called whenever toggle flag is changed
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
    end;
    -- Scroll to the bottom of the page to read more about the following two:
    Warning = "This has a warning"; -- optional: this argument is used in all elements (except for Paragraph) and will indicate text that will appear when the player hovers over the warning icon
    WarningIcon = 12345; -- optional: ImageAssetId for warning icon, will only be used if Warning is not nil, default is yellow warning icon.
})
-- by EvilMakio
-- https://rscripts.net/u/evilmakio
-- Jump

MySection:CreateSliderToggle({ -- IMPORTANT: This function does not return anything, please modify flags directly in order to read or update toggle values. SCROLL TO BOTTOM OF PAGE TO SEE HOW TO MODIFY FLAGS
    Name = "Jump"; -- required: name of element
    SliderFlag = "Slider1"; -- required: unique flag name to use for slider element
    ToggleFlag = "Jump"; -- required: unique flag name to use for toggle element
    Min = 50; -- required: slider minimum drag
    Max = 100; -- required: slider maximum drag (Max>Min or else script will error)
    AllowOutOfRange = true; -- optional: determines whether the player can enter values outside of range Min:Max when typing in the TextBox. If left nil, this is false
    Digits = 2; -- optional: digits for rounding when dragging or entering values, default is 0 (whole numbers)
    SliderDefault = 5; -- optional: default value for slider, will be used if config saving is disabled and there is no saved data, will be the Min value if left nil
    ToggleDefault = false; -- optional: default value for toggle, will be used if config saving is disabled and there is no saved data, will be false if left nil
    SliderCallback = function(newValue) -- optional: function that will be called whenever slider flag is changed
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = newValue
    end;
    ToggleCallback = function(newValue) -- optional: function that will be called whenever toggle flag is changed
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
    end;
    -- Scroll to the bottom of the page to read more about the following two:
    Warning = "This has a warning"; -- optional: this argument is used in all elements (except for Paragraph) and will indicate text that will appear when the player hovers over the warning icon
    WarningIcon = 12345; -- optional: ImageAssetId for warning icon, will only be used if Warning is not nil, default is yellow warning icon.
})

-- by EvilMakio
-- https://rscripts.net/u/evilmakio
--esp

MySection:CreateToggle({ -- IMPORTANT: This function does not return anything, please modify flags directly in order to read or update toggle values. SCROLL TO BOTTOM OF PAGE TO SEE HOW TO MODIFY FLAGS
    Name = "ESP"; -- required: name of element
    Flag = "MyToggle"; -- required: unique flag name to use
    Default = true; -- optional: default value for toggle, will be used if config saving is disabled and there is no saved data, will be false if left nil
    Callback = function(newValue) -- optional: function that will be called when toggled, it is reccomended to modify flags directly
        local highlight = Instance.new("Highlight")
local rS = game:GetService("RunService")

rS.RenderStepped:Connect(function()
    for _, v in pairs(game.Players:GetPlayers()) do
        if not v.Character:FindFirstChild("Highlight") then
            highlight.FillTransparency = 1
            highlight:Clone().Parent = v.Character
            highlight.OutlineColor = v.Team.TeamColor.Color
    end
    
    game.Players.PlayerAdded:Connect(function(plr)
        plr.CharacterAdded:Connect(function(char)
            if not char:FindFirstChild("Highlight") then
                highlight.FillTransparency = 1
                highlight:Clone().Parent = char
                highlight.OutlineColor = plr.Team.TeamColor.Color
            end
        end)
    end)
    end
end)
    end;
    -- Scroll to the bottom of the page to read more about the following two:
    Warning = "This has a warning"; -- optional: this argument is used in all elements (except for Body) and will indicate text that will appear when the player hovers over the warning icon
    WarningIcon = 12345; -- optional: ImageAssetId for warning icon, will only be used if Warning is not nil, default is yellow warning icon.
})

-- by EvilMakio
-- https://rscripts.net/u/evilmakio
